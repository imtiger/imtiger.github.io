<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | 我是Tiger，记录生活点滴!]]></title>
  <link href="http://imtiger.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://imtiger.github.io/"/>
  <updated>2013-09-28T00:40:45+08:00</updated>
  <id>http://imtiger.github.io/</id>
  <author>
    <name><![CDATA[imtiger]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unix like系统中，查找某个目录下包含特定关键字的文件]]></title>
    <link href="http://imtiger.github.io/blog/2013/09/26/find-files-with-a-keyword-in-a-dir/"/>
    <updated>2013-09-26T22:39:00+08:00</updated>
    <id>http://imtiger.github.io/blog/2013/09/26/find-files-with-a-keyword-in-a-dir</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/2013/09/27/2013-09-27-02.jpg"></p>

<p>作为一枚程序猿，咋们经常在工作当中会遇到一种场景：   <br/>
<strong>查找某个目录中包含某个关键字的文件</strong>，那么我们如何来实现这个需求呢？我个人的习惯是如果某个任务经常要执行，那么我会习惯性的写一个脚本，建立一个alias，然后每次需要的时候，直接调用脚本来完成任务，这才是咋们程序猿应该有的工作态度嘛。</p>

<p>好了，废话不多了，咋们直接show code啦。</p>

<!-- more -->


<p>```bash find files in a specific dir with a keyword<br/>
 #!/bin/bash
 #find files in a specific dir with a keyword<br/>
 #write by tiger
 #2013.09.26</p>

<p>echo -e &ldquo;\nThis script finds files in a specific dir with a keyword.\nOK,Please input a keyword:&rdquo;</p>

<p>read keyword
if [ &ldquo;$keyword&rdquo; == &ldquo;&rdquo; ]; then</p>

<pre><code>echo  "keyword can not be null!\n" 
exit 0 
</code></pre>

<p>fi</p>

<p>echo &ldquo;\nPlease input the dir path:&rdquo;
read dirPath
while [ &ldquo;$dirPath&rdquo; == &ldquo;&rdquo; ]
do</p>

<pre><code>echo  "The dir can't be null,pls input it again"
read  dirPath
</code></pre>

<p>done</p>

<p>if [ ! -d &ldquo;$dirPath&rdquo; ]; then
  echo &ldquo;The $dirPath is not exist!\n\n&rdquo;
  exit 0
fi</p>

<p>echo  &ldquo;\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash; Find these files &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;\n&rdquo;</p>

<p>fileCount=0
files=<code>ls -R $dirPath 2&gt; /dev/null | grep -v '^$'</code>
for fileName in $files
do</p>

<pre><code>temp=`echo $fileName | sed 's/:.*$//g'` 
if [ "$fileName" != "$temp" ]; then 
    currentDir=$temp 
else 
    fileType=`file $currentDir/$fileName | grep "text"` 
    if [ "$fileType" != "" ]; then 
        temp=`grep $keyword $currentDir/$fileName 2&gt; /dev/null` 
        if [ "$temp" != "" ]; then 
            echo $currentDir/$fileName  
            let fileCount++ 
        fi 
    fi 
fi 
</code></pre>

<p>done
if [ $fileCount -gt 0 ];then
  echo &ldquo;\n\nFiles Total: $fileCount&rdquo;
  echo &ldquo;\nFind Finished!\n&rdquo;
else</p>

<pre><code>echo "No files found!"      
</code></pre>

<p>fi</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
